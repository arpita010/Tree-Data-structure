/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result=new ArrayList<>();
        if(root==null)return result;
        Queue<Pair> queue=new LinkedList<>();
        queue.add(new Pair(root,0));
        TreeMap<Integer,Integer> map=new TreeMap<>();
        while(!queue.isEmpty())
        {
            Pair cur=queue.remove();
            TreeNode node=cur.node;
            int level=cur.level;
            map.put(level,node.val);
            if(node.left!=null)queue.add(new Pair(node.left,level+1));
            if(node.right!=null)queue.add(new Pair(node.right,level+1));
        }
        for(int it:map.values())result.add(it);
        return result;
    }
}
class Pair
{
    TreeNode node;
    int level;
    public Pair(TreeNode node,int level)
    {
        this.node=node;
        this.level=level;
    }
}
